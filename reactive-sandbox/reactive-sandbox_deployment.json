{
  "kind": "Deployment",
  "apiVersion": "extensions/v1beta1",
  "metadata": {
    "name": "reactive-sandbox-test-reactive-sandbox",
    "namespace": "test",
    "selfLink": "/apis/extensions/v1beta1/namespaces/test/deployments/reactive-sandbox-test-reactive-sandbox",
    "labels": {
      "app": "reactive-sandbox",
      "chart": "reactive-sandbox-0.2.0",
      "heritage": "Tiller",
      "release": "reactive-sandbox-test"
    },
    "annotations": {
      "deployment.kubernetes.io/revision": "2"
    }
  },
  "spec": {
    "replicas": 1,
    "selector": {
      "matchLabels": {
        "app": "reactive-sandbox",
        "release": "reactive-sandbox-test"
      }
    },
    "template": {
      "metadata": {
        "creationTimestamp": null,
        "labels": {
          "app": "reactive-sandbox",
          "release": "reactive-sandbox-test"
        }
      },
      "spec": {
        "containers": [
          {
            "name": "reactive-sandbox",
            "image": "lightbend-docker-registry.bintray.io/rp/reactive-sandbox:0.2.0",
            "ports": [
              {
                "hostPort": 22042,
                "containerPort": 9042,
                "protocol": "TCP"
              },
              {
                "hostPort": 22200,
                "containerPort": 9200,
                "protocol": "TCP"
              },
              {
                "hostPort": 22092,
                "containerPort": 9092,
                "protocol": "TCP"
              },
              {
                "hostPort": 22181,
                "containerPort": 2181,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "POD_IP",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "status.podIP"
                  }
                }
              },
              {
                "name": "RS_ENABLE_CASSANDRA",
                "value": "1"
              },
              {
                "name": "RS_ENABLE_ELASTICSEARCH",
                "value": "1"
              },
              {
                "name": "RS_ENABLE_KAFKA",
                "value": "1"
              },
              {
                "name": "RS_ENABLE_ZOOKEEPER",
                "value": "1"
              },
              {
                "name": "RS_CASSANDRA_HEAP",
                "value": "256"
              },
              {
                "name": "RS_ELASTICSEARCH_HEAP",
                "value": "256"
              },
              {
                "name": "RS_KAFKA_HEAP",
                "value": "256"
              },
              {
                "name": "RS_ZOOKEEPER_HEAP",
                "value": "256"
              }
            ],
            "resources": {},
            "readinessProbe": {
              "exec": {
                "command": [
                  "/bin/bash",
                  "-c",
                  "([ \"$RS_ENABLE_CASSANDRA\" = 0 ] || (/opt/cassandra/bin/nodetool status | grep $POD_IP | grep ^UN)) && ([ \"$RS_ENABLE_ELASTICSEARCH\" = 0 ] || (wget \"http://$POD_IP:9200/_cat/health\" -O - -q | grep \"green\\|yellow\")) && ([ \"$RS_ENABLE_KAFKA\" = 0 ] || /opt/kafka/bin/kafka-topics.sh --zookeeper 127.1.0.1 --list) && ([ \"$RS_ENABLE_ZOOKEEPER\" = 0 ] || [ \"$(echo ruok | nc 127.0.0.1 2181)\" = \"imok\" ])"
                ]
              },
              "initialDelaySeconds": 15,
              "timeoutSeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "securityContext": {},
        "schedulerName": "default-scheduler"
      }
    },
    "strategy": {
      "type": "RollingUpdate",
      "rollingUpdate": {
        "maxUnavailable": "25%",
        "maxSurge": "25%"
      }
    },
    "revisionHistoryLimit": 2,
    "progressDeadlineSeconds": 600
  }
}